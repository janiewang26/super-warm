{"version":3,"sources":["components/navi/navbar.js","components/navi/dropDown.js","components/navi/naviBar.js","routes/home.js","components/forum/post.js","components/forum/comments.js","components/forum/previews.js","components/forum/postModal.js","components/forum/forumContainer.js","components/forum/forumHeader.js","routes/forum.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","handleItemClick","e","name","setState","activeItem","this","Menu","Item","Label","size","color","Icon","as","Link","to","active","onClick","Component","options","key","text","value","DropdownSimple","compact","Dropdown","simple","item","NaviBar","Grid","columns","Column","Segment","width","Home","Post","Container","Detail","Header","Divider","Button","floated","labelPosition","basic","pointing","Comments","Comment","Group","dividing","Avatar","src","Content","Author","Metadata","Text","Actions","Action","Form","reply","TextArea","content","icon","primary","items","meta","header","description","Previews","Card","PostModal","open","show","dimmer","close","fluid","Modal","onClose","Description","Field","placeholder","label","Checkbox","type","positive","ForumContainer","Row","ForumHeader","Subheader","Forum","App","fallback","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d2ae86b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Menu, Label, Icon } from 'semantic-ui-react'\r\n\r\nexport default class Navbar extends Component {\r\n  state = {}\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Menu>\r\n        <Menu.Item>\r\n          <Label size='huge' color='yellow'>\r\n            <Icon name='fire'/>\r\n            Super Warm\r\n          </Label>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          as={ Link }\r\n          to='/'\r\n          name='Home'\r\n          active={activeItem === 'Home'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Home\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          as={ Link }\r\n          to='/forum'\r\n          name='Forum'\r\n          active={activeItem === 'Forum'}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          Forum\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}","import React from 'react'\nimport { Dropdown, Menu } from 'semantic-ui-react'\n\nconst options = [\n  { key: 1, text: 'Stress', value: 1 },\n  { key: 2, text: 'Anxiety', value: 2 },\n  { key: 3, text: 'Sadness', value: 3 },\n  { key: 4, text: 'Overwhelm', value: 4 },\n]\n\nconst DropdownSimple = () => (\n  <Menu compact>\n    <Dropdown text='Dropdown' options={options} simple item />\n  </Menu>\n)\n\nexport default DropdownSimple","import React from 'react'\nimport { Grid, Segment } from 'semantic-ui-react'\nimport DropdownSimple from '../../components/navi/dropDown'\n\nconst NaviBar = () => (\n  <Grid columns='equal'>\n    <Grid.Column>\n      <Segment>\n        <DropdownSimple/>    \n\n      </Segment>\n    </Grid.Column>\n    <Grid.Column width={8}>\n      <Segment>\n      </Segment>\n    </Grid.Column>\n  </Grid>\n)\n\nexport default NaviBar;\n","import React from 'react';\r\n\r\nimport NaviBar from '../components/navi/naviBar';\r\n\r\nconst Home = () => (\r\n    <div>\r\n        <NaviBar/>\r\n    </div>\r\n);\r\n\r\nexport default Home;","import React from 'react';\r\nimport { \r\n    Container,\r\n    Header,\r\n    Divider,\r\n    Label,\r\n    Icon,\r\n    Button,\r\n    Segment\r\n} from 'semantic-ui-react';\r\n\r\nconst Post = () => (\r\n    <div>\r\n        <Container text>\r\n            <Label color='blue'>\r\n                <Icon name='user outline' />\r\n                Anonymous\r\n                <Label.Detail>posted a while ago</Label.Detail>\r\n            </Label>\r\n            <Segment>\r\n                <Header as='h2'>\r\n                    How do I register to the Accessibility Centre?\r\n                </Header>\r\n                <Divider/>\r\n                <p>\r\n                    I've not been doing the best in class and I've been feeling\r\n                    a lot of anxiety lately. I was wondering if it was possible\r\n                    to register with the Accessibility Centre to have myself\r\n                    accommodated?\r\n                </p>\r\n                <p>\r\n                    It's safe to say that these symptoms have been bothering\r\n                    me on a daily basis, and I think I need help.\r\n                </p>\r\n            </Segment>\r\n            <Label>\r\n                Views\r\n                <Label.Detail>50</Label.Detail>\r\n            </Label>\r\n            <Button size='mini' floated='right' as='div' labelPosition='right'>\r\n            <Button size='mini' color='green'>\r\n                <Icon name='thumbs up' />\r\n                Like\r\n            </Button>\r\n            <Label as='a' basic color='green' pointing='left'>\r\n                14\r\n            </Label>\r\n            </Button>\r\n        </Container>\r\n    </div>\r\n);\r\n\r\nexport default Post;","import React from 'react'\r\nimport { Button, Comment, Form, Header } from 'semantic-ui-react'\r\n\r\nconst Comments = () => (\r\n  <Comment.Group>\r\n    <Header as='h3' dividing>\r\n      Comments\r\n    </Header>\r\n\r\n    <Comment>\r\n      <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/large/molly.png' />\r\n      <Comment.Content>\r\n        <Comment.Author as='a'>Matt</Comment.Author>\r\n        <Comment.Metadata>\r\n          <div>Today at 5:42PM</div>\r\n        </Comment.Metadata>\r\n        <Comment.Text>\r\n          You can call Student Health the day of and book an appointment! Multiple calls are encouraged!\r\n        </Comment.Text>\r\n        <Comment.Actions>\r\n          <Comment.Action>Reply</Comment.Action>\r\n        </Comment.Actions>\r\n      </Comment.Content>\r\n    </Comment>\r\n\r\n    <Comment>\r\n      <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/large/jenny.jpg' />\r\n      <Comment.Content>\r\n        <Comment.Author as='a'>Elliot Fu</Comment.Author>\r\n        <Comment.Metadata>\r\n          <div>Yesterday at 12:30AM</div>\r\n        </Comment.Metadata>\r\n        <Comment.Text>\r\n          <p>You're not overreacting if you needed to write this post. Definitely look into registering.</p>\r\n        </Comment.Text>\r\n        <Comment.Actions>\r\n          <Comment.Action>Reply</Comment.Action>\r\n        </Comment.Actions>\r\n      </Comment.Content>\r\n      <Comment.Group>\r\n        <Comment>\r\n          <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/large/jenny.jpg' />\r\n          <Comment.Content>\r\n            <Comment.Author as='a'>Jenny Hess</Comment.Author>\r\n            <Comment.Metadata>\r\n              <div>Just now</div>\r\n            </Comment.Metadata>\r\n            <Comment.Text>I would first drop by Student Health to fill in the mental health assessment form.</Comment.Text>\r\n            <Comment.Actions>\r\n              <Comment.Action>Reply</Comment.Action>\r\n            </Comment.Actions>\r\n          </Comment.Content>\r\n        </Comment>\r\n      </Comment.Group>\r\n    </Comment>\r\n\r\n    <Comment>\r\n      <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/large/joe.jpg' />\r\n      <Comment.Content>\r\n        <Comment.Author as='a'>Joe Henderson</Comment.Author>\r\n        <Comment.Metadata>\r\n          <div>5 days ago</div>\r\n        </Comment.Metadata>\r\n        <Comment.Text>I'm here to talk if any, hit me up!</Comment.Text>\r\n        <Comment.Actions>\r\n          <Comment.Action>Reply</Comment.Action>\r\n        </Comment.Actions>\r\n      </Comment.Content>\r\n    </Comment>\r\n\r\n    <Form reply>\r\n      <Form.TextArea />\r\n      <Button content='Add Reply' labelPosition='left' icon='edit' primary />\r\n    </Form>\r\n  </Comment.Group>\r\n)\r\n\r\nexport default Comments;","import React from 'react'\r\nimport { Card } from 'semantic-ui-react'\r\n\r\nconst items = [\r\n  {\r\n    meta: 'Posted 10 minutes ago',\r\n    header: 'How do I register to the Accessibility Centre?',\r\n    description:\r\n      'I\\'ve not been doing the best in class and I\\'ve been feeling...',\r\n  },\r\n  {\r\n    meta: 'Posted two hours ago',\r\n    header: 'When should I think I am overreacting?',\r\n    description:\r\n      'How do I know if what I\\'m feeling is simply an overreaction or...',\r\n  },\r\n  {\r\n    meta: 'Posted yesterday',\r\n    header: 'Help, I don\\'t know if I need a doctor or not.',\r\n    description:\r\n      'I have some stress symptoms that will not go away even if I am not in a stressful situation...',\r\n  },\r\n  {\r\n    meta: 'Posted 10 minutes ago',\r\n    header: 'How do I register to the Accessibility Centre?',\r\n    description:\r\n      'I\\'ve not been doing the best in class and I\\'ve been feeling...',\r\n  },\r\n  {\r\n    meta: 'Posted two hours ago',\r\n    header: 'When should I think I am overreacting?',\r\n    description:\r\n      'How do I know if what I\\'m feeling is simply an overreaction or...',\r\n  },\r\n  {\r\n    meta: 'Posted yesterday',\r\n    header: 'Help, I don\\'t know if I need a doctor or not.',\r\n    description:\r\n      'I have some stress symptoms that will not go away even if I am not in a stressful situation...',\r\n  },\r\n]\r\n\r\nconst Previews = () => <Card.Group items={items} />\r\n\r\nexport default Previews;","import React, { Component } from 'react'\r\nimport { Button, Modal, Icon, Form, Checkbox } from 'semantic-ui-react'\r\n\r\nclass PostModal extends Component {\r\n  state = { open: false }\r\n\r\n  show = (dimmer) => () => this.setState({ dimmer, open: true })\r\n  close = () => this.setState({ open: false })\r\n\r\n  render() {\r\n    const { open, dimmer } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n            fluid icon labelPosition='left' \r\n            onClick={this.show('inverted')}\r\n            >\r\n            <Icon name='plus'/>\r\n            Add a post\r\n        </Button>\r\n\r\n        <Modal dimmer={dimmer} open={open} onClose={this.close}>\r\n          <Modal.Header>Ask something!</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n            <Form>\r\n                <Form.Field>\r\n                    <label>Title</label>\r\n                    <input placeholder='Title' />\r\n                </Form.Field>\r\n                <Form.TextArea label='Body' placeholder='What is on your mind?...'/>\r\n                <Form.Field>\r\n                    <Checkbox label='Submit anonymously' />\r\n                </Form.Field>\r\n            </Form>\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n                icon='close'\r\n                labelPosition='right'\r\n                content=\"I changed my mind\"\r\n                onClick={this.close}\r\n                />\r\n            <Button\r\n                type='submit'\r\n                positive\r\n                icon='checkmark'\r\n                labelPosition='right'\r\n                content=\"Yes, please\"\r\n                onClick={this.close}\r\n                />\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PostModal;\r\n","import React from 'react';\r\nimport {\r\n    Grid,\r\n    Segment,\r\n    Divider,\r\n} from 'semantic-ui-react';\r\n\r\nimport Post from './post';\r\nimport Comments from './comments';\r\nimport Previews from './previews';\r\nimport PostModal from './postModal';\r\n\r\nconst ForumContainer = () => (\r\n    <Grid>\r\n        <Grid.Row columns={4}>\r\n        <Grid.Column width={3}>\r\n        </Grid.Column>\r\n        <Grid.Column width={3}>\r\n            <Segment>\r\n                <Grid.Row>\r\n                    <PostModal/>\r\n                    <Divider/>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Previews/>\r\n                </Grid.Row>\r\n            </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column width={8}>\r\n            <Segment>\r\n                <Post/>\r\n                <Comments/>\r\n            </Segment>\r\n        </Grid.Column>\r\n        <Grid.Column width={3}>\r\n        </Grid.Column>\r\n        </Grid.Row>\r\n    </Grid>\r\n);\r\n\r\nexport default ForumContainer;","import React from 'react';\r\nimport {\r\n    Header,\r\n    Icon,\r\n    Segment,\r\n} from 'semantic-ui-react';\r\n\r\n\r\nconst ForumHeader = () => (\r\n    <Segment>\r\n        <Header as='h1'>\r\n            <Icon name='heart outline' />\r\n            <Header.Content>\r\n            Advice Column\r\n            <Header.Subheader>Get some quick advice on some quick questions</Header.Subheader>\r\n            </Header.Content>\r\n        </Header>\r\n    </Segment>\r\n);\r\n\r\nexport default ForumHeader;","import React from 'react';\r\nimport {\r\n} from 'semantic-ui-react';\r\n\r\nimport ForumContainer from '../components/forum/forumContainer';\r\nimport ForumHeader from '../components/forum/forumHeader';\r\n\r\nconst Forum = () => (\r\n    <div> \r\n        <ForumHeader/>\r\n        <ForumContainer/>\r\n    </div>\r\n);\r\n\r\nexport default Forum;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport React, { Suspense } from 'react';\n\nimport Navbar from \"./components/navi/navbar\";\nimport 'semantic-ui-css/semantic.min.css'\n\nimport Home from \"./routes/home\";\nimport Forum from \"./routes/forum\";\n\n\nconst App = () => (\n  <Router>\n    <Navbar/>\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/forum\" component={Forum}/>\n      </Switch>\n    </Suspense>\n  </Router>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}